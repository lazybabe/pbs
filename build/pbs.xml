<?xml version="1.0" encoding="UTF-8" ?>
<project name="pbs" default="tip" description="项目管理工具">
    <!-- 载入pbs配置 -->
    <property file="conf/pbs.properties" />
    <!-- 载入项目配置 -->
    <property file="${application.startdir}/conf/pbs/build.properties" />
    <!-- 当前用户 -->
    <exec command="whoami" outputProperty="user" />

    <target name="tip" hidden="true">
        <echo>Try 'phing -l -q -f ${phing.file}' to see a list of tasks.</echo>
    </target>

    <target name="test" hidden="true">
        <echo>${public.dir}</echo>
    </target>

    <!-- 开发环境操作 start -->
    <target name="config" description="初始化配置">
        <echo>初始化配置</echo>
        <echo>创建配置目录</echo>
        <mkdir dir="${prj.conf.used}" />
        <echo>拷贝配置</echo>
        <copy todir="${prj.conf.used}" overwrite="true">
            <fileset dir="${prj.conf.tpl}" />
            <!-- 替换字符 -->
            <filterchain>
                <replacetokens begintoken="{{" endtoken="}}">
                    <token key="PRJ_NAME" value="${prj.name}" />
                    <token key="PRJ_ROOT" value="${prj.root}" />
                    <token key="DOMAIN" value="${prj.domain}" />
                    <token key="USER" value="${user}" />
                    <token key="DOMAIN_PREFIX" value="${user}." />
                </replacetokens>
            </filterchain>
        </copy>
        <echo>生成nginx配置软链接</echo>
        <exec command="sudo ln -s ${prj.conf.used}/nginx.conf ${nginx.link}" />
        <echo>创建PHP-FPM目录</echo>
        <exec command="sudo mkdir -p -m 0777 ${fpm.dir}" />
        <echo>生成PHP-FPM配置</echo>
        <exec command="sudo ln -s ${prj.conf.used}/fpm.conf ${fpm.conf}" />
        <echo>生成PHP配置</echo>
        <exec command="sudo ln -s ${prj.conf.used}/php.ini ${php.ini}" />
    </target>

    <target name="start" description="启动服务">
        <echo>启动服务</echo>
        <phingcall target="fpm_start"></phingcall>
        <phingcall target="nginx_reload"></phingcall>
    </target>

    <target name="stop" description="停止服务">
        <echo>停止服务</echo>
        <phingcall target="fpm_stop"></phingcall>
    </target>
    <target name="restart" description="重启服务">
        <phingcall target="stop"></phingcall>
        <phingcall target="start"></phingcall>
    </target>

    <target name="reload" description="重载nginx和php-fpm配置">
        <echo>重载配置</echo>
        <phingcall target="nginx_reload"></phingcall>
        <phingcall target="fpm_reload"></phingcall>
    </target>

    <target name="clean" description="清理项目">
        <phingcall target="stop"></phingcall>
        <echo>清除nginx软链接</echo>
        <exec command="sudo rm ${nginx.link}" />
        <echo>清除PHP-FPM目录</echo>
        <exec command="sudo rm -rf ${fpm.dir}" />
        <echo>清除当前配置目录</echo>
        <delete dir="${prj.conf.used}" />
    </target>

    <target name="build" description="开发环境初始化并启动项目">
        <phingcall target="config"></phingcall>
        <phingcall target="restart"></phingcall>
    </target>
    <!-- 开发环境操作 end -->

    <!-- 内部调用 start -->
    <target name="nginx_reload" hidden="true">
        <echo>重载nginx配置</echo>
        <exec command="sudo ${nginx.bin} -s reload" />
    </target>

    <target name="fpm_start" hidden="true">
        <echo>启动PHP-FPM</echo>
        <exec command="sudo ${fpm.bin} start ${prj.name} ${user}" />
    </target>

    <target name="fpm_stop" hidden="true">
        <echo>停止PHP-FPM</echo>
        <exec command="sudo ${fpm.bin} stop ${prj.name} ${user}" />
    </target>

    <target name="fpm_reload" hidden="true">
        <echo>重载PHP-FPM配置</echo>
        <exec command="sudo ${fpm.bin} reload ${prj.name} ${user}" />
    </target>
    <!-- 内部调用 end -->

    <!-- 发版操作 start -->
    <target name="pub" depends="clone" description="发布项目">
        <echo>${prj.name} 发布完成</echo>
    </target>

    <target name="fetch" depends="prepare" hidden="true">
        <echo>拉取tags</echo>
    </target>

    <target name="clone" depends="fetch" hidden="true">
        <echo>拉取代码</echo>
    </target>

    <target name="prepare" hidden="true">
        <echo>准备项目</echo>
        <input propertyname="prj.name">
            请输入项目名称:</input>
        <!-- 检查项目名 -->
        <if>
            <equals arg1="" arg2="${prj.name}"/>
            <then>
                <fail>未输入项目名称</fail>
            </then>
        </if>
    </target>
    <!-- 发版操作 start -->
</project>
